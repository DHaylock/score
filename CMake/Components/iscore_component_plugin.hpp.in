#pragma once
#include <iscore/plugins/qt_interfaces/FactoryInterface_QtInterface.hpp>
#include <QObject>
#include <utility>

#include <iscore/application/ApplicationContext.hpp>
#include <iscore/plugins/customfactory/FactoryInterface.hpp>

class ${PLUGIN_NAME} final:
        public QObject,
        public iscore::FactoryInterface_QtInterface
{
        Q_OBJECT
        Q_PLUGIN_METADATA(IID FactoryInterface_QtInterface_iid)
        Q_INTERFACES(
                iscore::FactoryInterface_QtInterface
                )

    public:
        ${PLUGIN_NAME}();
        virtual ~${PLUGIN_NAME}();

        std::vector<std::unique_ptr<iscore::FactoryInterfaceBase>> factories(
                const iscore::ApplicationContext& ctx,
                const iscore::FactoryBaseKey& factoryName) const override;
};
